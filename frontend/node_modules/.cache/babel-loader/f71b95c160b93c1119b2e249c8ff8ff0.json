{"ast":null,"code":"import { useState } from \"react\";\nconst Authentication = {\n  //User : function (){//This is where the token will be validated\n  //const [token, setToken] = useToken();\n  //let token= \"dsfdsfsdf\";\n  //=============== Initial Validation ===================\n  //=============== End of intial validation =============\n  //return true; //true if valid, false if invalid.\n  User: function () {\n    const check = async () => {\n      let result = validateJWT(\"iuusdiuf\");\n      return result;\n    };\n\n    return check();\n  }\n};\nexport default Authentication;\n\nasync function validateJWT(token) {\n  return await fetch(\"http://localhost:8000/api/v1/authorise_user/\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(token)\n  }).then(data => data.json());\n}","map":{"version":3,"sources":["C:/Users/rober/Documents/Schoolwork/Computer Science/NEA/FinalNEA/frontend/src/Services/Authentication.js"],"names":["useState","Authentication","User","check","result","validateJWT","token","fetch","method","headers","body","JSON","stringify","then","data","json"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,MAAMC,cAAc,GAAG;AACnB;AACI;AACA;AACA;AAEA;AAGA;AACJC,EAAAA,IAAI,EAAG,YAAW;AAChB,UAAMC,KAAK,GAAG,YAAY;AACxB,UAAIC,MAAM,GAAGC,WAAW,CAAC,UAAD,CAAxB;AACA,aAAOD,MAAP;AACD,KAHD;;AAKA,WAAOD,KAAK,EAAZ;AACD;AAjBkB,CAAvB;AAoBA,eAAeF,cAAf;;AAEA,eAAeI,WAAf,CAA2BC,KAA3B,EAAiC;AAC7B,SAAO,MAAMC,KAAK,CAAC,8CAAD,EAAiD;AACnEC,IAAAA,MAAM,EAAE,MAD2D;AAEnEC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAF0D;AAKnEC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,KAAf;AAL6D,GAAjD,CAAL,CAMZO,IANY,CAMNC,IAAD,IAAUA,IAAI,CAACC,IAAL,EANH,CAAb;AAOH","sourcesContent":["import {useState} from \"react\";\r\nconst Authentication = {\r\n    //User : function (){//This is where the token will be validated\r\n        //const [token, setToken] = useToken();\r\n        //let token= \"dsfdsfsdf\";\r\n        //=============== Initial Validation ===================\r\n\r\n        //=============== End of intial validation =============\r\n       \r\n       \r\n        //return true; //true if valid, false if invalid.\r\n    User : function() {\r\n      const check = async () => {\r\n        let result = validateJWT(\"iuusdiuf\");\r\n        return result;\r\n      }\r\n      \r\n      return check();\r\n    }\r\n  \r\n}\r\nexport default Authentication;\r\n\r\nasync function validateJWT(token){\r\n    return await fetch(\"http://localhost:8000/api/v1/authorise_user/\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(token),\r\n  }).then((data) => data.json());\r\n}"]},"metadata":{},"sourceType":"module"}