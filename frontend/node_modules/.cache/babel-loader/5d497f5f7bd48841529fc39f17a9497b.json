{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rober\\\\Documents\\\\Schoolwork\\\\Computer Science\\\\NEA\\\\FinalNEA\\\\frontend\\\\src\\\\Pages\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport { useLocation, useNavigate, useSearchParams } from \"react-router-dom\";\nimport { Map, ActivityList, LoadAndSort } from \"../Components/ComponentImports\";\nimport \"./Home.css\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { StravaOptionPopup } from \"./PageImports\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction getToken() {\n  //gets the value of token from session storage.\n  try {\n    return JSON.parse(sessionStorage.getItem(\"token\"));\n  } catch (e) {\n    sessionStorage.removeItem(\"token\");\n  }\n}\n\nfunction Home() {\n  _s();\n\n  //if there is a validation_error then log the user out.\n  const LoadedActivitiesFromDB = useRef(false);\n  const [radioButtonChecked, setRadioButtonChecked] = useState(\"before\");\n  const [dateChosen, setDateChosen] = useState();\n  const [activities, setActivities] = useState({});\n  const search = useLocation().search;\n  console.log(search);\n  console.log(new URLSearchParams(search).get(\"code\"));\n  useEffect(() => {\n    //get all activites from database (will happen on page load)\n    if (!LoadedActivitiesFromDB.current) {\n      console.log(\"loaded\");\n      fetch(\"http://localhost:8000/api/v1/activity/\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getToken()}`\n        }\n      }).then(data => data.json()).then(res => {\n        console.log(res);\n        LoadedActivitiesFromDB.current = true;\n\n        if (res[\"type\"] == \"success\") {\n          if (Object.keys(res[\"activities\"]).length > 0) {\n            //do something with the activities (add to activity list)\n            setActivities(res[\"activites\"]);\n            console.log(\"made it!\");\n          }\n        } else {//handle error.\n        }\n      });\n    }\n  });\n  let scope = new URLSearchParams(search).get(\"scope\");\n  console.log(\"scope: \" + scope);\n\n  if (scope == \"read,activity:read_all\") {\n    //Will check the previous url to stop 'bad requests' or clear search params.\n    let code = new URLSearchParams(search).get(\"code\");\n    var uri = window.location.toString(); //from https://onlinecode.org/jquery-remove-query-string-parameter-from-url-expertphp/\n\n    var clean_uri = uri.substring(0, uri.indexOf(\"?\"));\n    window.history.replaceState({}, document.title, clean_uri);\n    console.log(code);\n    fetch(\"https://www.strava.com/oauth/token\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        client_id: 53221,\n        client_secret: \"1a3a01f913e69e0868315901ebb13c27aae61dd4\",\n        //would be hidden.\n        code: code,\n        grant_type: \"authorization_code\"\n      })\n    }).then(data => data.json()).then(res => {\n      try {\n        if (\"token_type\" in res) {\n          //given token\n          //Save tokens in database and set stravaAuthorised to true. THen can make requests.\n          //PUT request to \"/user\" to update user profile.\n          fetch(\"http://localhost:8000/api/v1/user/\", {\n            method: \"PUT\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": getToken()\n            },\n            body: JSON.stringify({\n              stravaAuthorised: true,\n              stravaAccessToken: res[\"access_token\"],\n              stravaRefreshToken: res[\"refresh_token\"],\n              stravaAccessTokenExpiresAt: res[\"expires_at\"]\n            })\n          });\n        } else {\n          //handle errors\n          console.log(res);\n        }\n      } catch (e) {}\n    });\n  }\n\n  const HandleClick = function () {\n    //First check if the user is strava_authorised. by calling get on \"/user\"\n    //IF NOT strava authorised, redirected to strava login, url checked and user details modified.\n    fetch(\"http://localhost:8000/api/v1/user\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: getToken()\n      }\n    }).then(data => data.json()).then(res => {\n      if (res[\"type\"] == \"user_details\") {\n        //successful\n        let userDetails = res[\"details\"];\n\n        if (!userDetails[\"stravaAuthorised\"]) {\n          //redirect to strava oauth page.\n          window.location = \"https://www.strava.com/oauth/authorize?client_id=53221&redirect_uri=http://localhost:3000/home&response_type=code&scope=activity:read_all\";\n        } else {\n          //Make strava request here.\n          //Check if access token is expired before making request.\n          fetch(`https://www.strava.com/api/v3/athlete/activities?${radioButtonChecked}=${dateChosen}`, {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": `Bearer ${userDetails[\"stravaAccessToken\"]}`\n            }\n          }).then(data => data.json()).then(response => {\n            //Send array to \"/activity\" POST to add to database if the activity isn't already there.\n            console.log(response);\n            fetch(\"http://localhost:8000/api/v1/activity/\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \".concat(getToken())\n              },\n              body: JSON.stringify({\n                \"activities\": response\n              })\n            }).then(d => d.json()).then(r => {\n              console.log(r);\n            });\n          });\n        }\n\n        console.log(userDetails);\n      } else {\n        //unsuccessful - handle errors\n        console.log(res);\n      }\n    });\n  };\n\n  const HandleRadioCheck = function (e) {\n    console.log(e.target.value);\n    setRadioButtonChecked(e.target.value);\n  };\n\n  const HandleDateChange = function (e) {\n    console.log(new Date(e.target.value).getTime());\n    setDateChosen(new Date(e.target.value).getTime());\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      id: \"grid-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row show-grid h-75\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col col-md-7\",\n          children: /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col col-md-5\",\n          children: /*#__PURE__*/_jsxDEV(ActivityList, {\n            activites: activities\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col col-md-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary loadbutton\",\n            onClick: e => HandleClick(e),\n            children: \"Load\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                value: \"before\",\n                name: \"BeforeOrAfter\",\n                onClick: HandleRadioCheck\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 13\n              }, this), \"Before\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                value: \"after\",\n                name: \"BeforeOrAfter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 13\n              }, this), \"After\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"dateFilter\",\n            onChange: e => HandleDateChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(Home, \"qEpwZ6k4jCjQWE+GH1P7lxwxCdE=\", false, function () {\n  return [useLocation];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/rober/Documents/Schoolwork/Computer Science/NEA/FinalNEA/frontend/src/Pages/Home.js"],"names":["useLocation","useNavigate","useSearchParams","Map","ActivityList","LoadAndSort","useEffect","useRef","useState","StravaOptionPopup","getToken","JSON","parse","sessionStorage","getItem","e","removeItem","Home","LoadedActivitiesFromDB","radioButtonChecked","setRadioButtonChecked","dateChosen","setDateChosen","activities","setActivities","search","console","log","URLSearchParams","get","current","fetch","method","headers","Authorization","then","data","json","res","Object","keys","length","scope","code","uri","window","location","toString","clean_uri","substring","indexOf","history","replaceState","document","title","body","stringify","client_id","client_secret","grant_type","stravaAuthorised","stravaAccessToken","stravaRefreshToken","stravaAccessTokenExpiresAt","HandleClick","userDetails","response","concat","d","r","HandleRadioCheck","target","value","HandleDateChange","Date","getTime"],"mappings":"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","sourcesContent":["import { useLocation, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport { Map, ActivityList, LoadAndSort } from \"../Components/ComponentImports\";\r\nimport \"./Home.css\";\r\nimport {useEffect, useRef, useState} from \"react\";\r\nimport {StravaOptionPopup} from \"./PageImports\";\r\nfunction getToken() {\r\n  //gets the value of token from session storage.\r\n  try {\r\n    return JSON.parse(sessionStorage.getItem(\"token\"));\r\n  } catch (e) {\r\n    sessionStorage.removeItem(\"token\");\r\n  }\r\n}\r\n\r\nfunction Home() {//if there is a validation_error then log the user out.\r\n  const LoadedActivitiesFromDB = useRef(false);\r\n  const [radioButtonChecked, setRadioButtonChecked] = useState(\"before\");\r\n  const [dateChosen, setDateChosen] = useState();\r\n  const [activities, setActivities] = useState({});\r\n  const search = useLocation().search;\r\n  console.log(search);\r\n  console.log(new URLSearchParams(search).get(\"code\"));\r\n  \r\n  useEffect(()=>{//get all activites from database (will happen on page load)\r\n    if(!LoadedActivitiesFromDB.current){\r\n      console.log(\"loaded\");\r\n      fetch(\"http://localhost:8000/api/v1/activity/\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${getToken()}`,\r\n        },})\r\n        .then((data)=>data.json())\r\n        .then((res)=>{\r\n          console.log(res);\r\n          LoadedActivitiesFromDB.current = true\r\n          if(res[\"type\"] == \"success\"){\r\n            \r\n            if(Object.keys(res[\"activities\"]).length > 0){\r\n              //do something with the activities (add to activity list)\r\n              setActivities(res[\"activites\"]);\r\n              console.log(\"made it!\");\r\n            }\r\n        \r\n          }\r\n          else{\r\n            //handle error.\r\n            \r\n          }\r\n        });\r\n  }\r\n  });\r\n\r\n\r\n\r\n  let scope = new URLSearchParams(search).get(\"scope\");\r\n  console.log(\"scope: \"+scope);\r\n  if (scope == \"read,activity:read_all\") {//Will check the previous url to stop 'bad requests' or clear search params.\r\n    let code = new URLSearchParams(search).get(\"code\");\r\n    var uri = window.location.toString();//from https://onlinecode.org/jquery-remove-query-string-parameter-from-url-expertphp/\r\n    var clean_uri = uri.substring(0, uri.indexOf(\"?\"));\r\n\t    window.history.replaceState({}, document.title, clean_uri);\r\n    \r\n    console.log(code);\r\n    fetch(\"https://www.strava.com/oauth/token\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        client_id: 53221,\r\n        client_secret: \"1a3a01f913e69e0868315901ebb13c27aae61dd4\", //would be hidden.\r\n        code: code,\r\n        grant_type: \"authorization_code\",\r\n      }),\r\n    })\r\n      .then((data) => data.json())\r\n      .then((res) => {\r\n        try {\r\n          \r\n          if (\"token_type\" in res){\r\n            //given token\r\n          //Save tokens in database and set stravaAuthorised to true. THen can make requests.\r\n          //PUT request to \"/user\" to update user profile.\r\n          fetch(\"http://localhost:8000/api/v1/user/\", {\r\n            method: \"PUT\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              \"Authorization\":getToken(),\r\n            },\r\n            body: JSON.stringify({\r\n              stravaAuthorised:true,\r\n              stravaAccessToken:res[\"access_token\"],\r\n              stravaRefreshToken:res[\"refresh_token\"],\r\n              stravaAccessTokenExpiresAt:res[\"expires_at\"]\r\n            }),\r\n          })\r\n          }\r\n        \r\n          else{//handle errors\r\n            console.log(res)\r\n          }\r\n      \r\n          \r\n          \r\n        }\r\n        catch(e){\r\n\r\n        }\r\n      \r\n    });\r\n  }\r\n  const HandleClick = function () {\r\n    //First check if the user is strava_authorised. by calling get on \"/user\"\r\n    //IF NOT strava authorised, redirected to strava login, url checked and user details modified.\r\n    fetch(\"http://localhost:8000/api/v1/user\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: getToken(),\r\n      },\r\n    })\r\n      .then((data) => data.json())\r\n      .then((res) => {\r\n        if (res[\"type\"] == \"user_details\") {\r\n          //successful\r\n          let userDetails = res[\"details\"];\r\n          if (!userDetails[\"stravaAuthorised\"]) {\r\n            //redirect to strava oauth page.\r\n            window.location =\r\n              \"https://www.strava.com/oauth/authorize?client_id=53221&redirect_uri=http://localhost:3000/home&response_type=code&scope=activity:read_all\";\r\n          }\r\n          else{\r\n            //Make strava request here.\r\n            //Check if access token is expired before making request.\r\n            fetch(`https://www.strava.com/api/v3/athlete/activities?${radioButtonChecked}=${dateChosen}`, {\r\n              method:\"GET\",\r\n              headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\": `Bearer ${userDetails[\"stravaAccessToken\"]}`,\r\n              },\r\n              \r\n            })\r\n            .then((data) => data.json())\r\n            .then(response => {\r\n              //Send array to \"/activity\" POST to add to database if the activity isn't already there.\r\n              console.log(response);\r\n              fetch(\"http://localhost:8000/api/v1/activity/\",{\r\n                method:\"POST\",\r\n                headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \".concat(getToken()),\r\n                },\r\n                body:JSON.stringify({\"activities\":response})\r\n\r\n              }).then(d => d.json())\r\n              .then(r => {\r\n                console.log(r);\r\n              });\r\n            })\r\n            \r\n\r\n            \r\n        }\r\n          console.log(userDetails);\r\n        } else {\r\n          //unsuccessful - handle errors\r\n          console.log(res);\r\n        }\r\n      });\r\n  };\r\n  const HandleRadioCheck = function(e){\r\n    console.log(e.target.value);\r\n    setRadioButtonChecked(e.target.value);\r\n  }\r\n  const HandleDateChange = function(e){\r\n    console.log(new Date(e.target.value).getTime());\r\n    setDateChosen(new Date(e.target.value).getTime());\r\n  }\r\n  return (\r\n    <>\r\n    <div className=\"container-fluid\" id=\"grid-container\">\r\n      <div className=\"row show-grid h-75\">\r\n        <div className=\"col col-md-7\">\r\n          <Map />\r\n        </div>\r\n        <div className=\"col col-md-5\">\r\n          <ActivityList activites={activities}/>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-7\"></div>\r\n        <div className=\"col col-md-5\">\r\n          <button className=\"btn btn-primary loadbutton\" onClick={(e)=>HandleClick(e)}>\r\n            Load\r\n          </button>\r\n          <div>\r\n            <label>\r\n            <input type=\"radio\" value=\"before\" name=\"BeforeOrAfter\" onClick={HandleRadioCheck}/>\r\n            Before\r\n            </label>\r\n            <label>\r\n            <input type=\"radio\" value=\"after\" name=\"BeforeOrAfter\"/>\r\n            After\r\n            </label>          \r\n          </div>\r\n          <input type=\"date\" id=\"dateFilter\" onChange={e => HandleDateChange(e)}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    </>\r\n  );\r\n}\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}