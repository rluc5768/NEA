{"ast":null,"code":"import { useState } from \"react\";\nconst Authentication = {\n  //User : function (){//This is where the token will be validated\n  //const [token, setToken] = useToken();\n  //let token= \"dsfdsfsdf\";\n  //=============== Initial Validation ===================\n  //=============== End of intial validation =============\n  //return true; //true if valid, false if invalid.\n  User: function (currentToken, setToken) {\n    if (currentToken == null) {\n      return false;\n    } else {\n      fetch(\"http://localhost:8000/api/v1/authorise_user/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(currentToken)\n      }).then(data => data.json()).then(valid => {\n        if (!valid) {\n          return false;\n        } else {\n          return true;\n        }\n      });\n    }\n  }\n};\nexport default Authentication;\n\nasync function validateJWT(token) {\n  const response = await fetch(\"http://localhost:8000/api/v1/authorise_user/\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(token)\n  });\n  const json = await response.json();\n  return json;\n}","map":{"version":3,"sources":["D:/SchoolWork/Computer Science/Year 2/NEA/NEA/frontend/src/Services/Authentication.js"],"names":["useState","Authentication","User","currentToken","setToken","fetch","method","headers","body","JSON","stringify","then","data","json","valid","validateJWT","token","response"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,MAAMC,cAAc,GAAG;AACrB;AACA;AACA;AACA;AAEA;AAEA;AACAC,EAAAA,IAAI,EAAE,UAAUC,YAAV,EAAwBC,QAAxB,EAAkC;AACtC,QAAGD,YAAY,IAAI,IAAnB,EAAwB;AACtB,aAAO,KAAP;AACD,KAFD,MAGI;AACFE,MAAAA,KAAK,CAAC,8CAAD,EAAiD;AACpDC,QAAAA,MAAM,EAAE,MAD4C;AAEpDC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF2C;AAKpDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,YAAf;AAL8C,OAAjD,CAAL,CAMGQ,IANH,CAMSC,IAAD,IAAQA,IAAI,CAACC,IAAL,EANhB,EAOCF,IAPD,CAOOG,KAAD,IAAU;AACd,YAAG,CAACA,KAAJ,EAAU;AAER,iBAAO,KAAP;AACD,SAHD,MAII;AACF,iBAAO,IAAP;AACD;AACF,OAfD;AAgBD;AACF;AA/BoB,CAAvB;AAiCA,eAAeb,cAAf;;AAEA,eAAec,WAAf,CAA2BC,KAA3B,EAAkC;AAChC,QAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAAC,8CAAD,EAAiD;AAC3EC,IAAAA,MAAM,EAAE,MADmE;AAE3EC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFkE;AAK3EC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeM,KAAf;AALqE,GAAjD,CAA5B;AAOA,QAAMH,IAAI,GAAG,MAAMI,QAAQ,CAACJ,IAAT,EAAnB;AACA,SAAOA,IAAP;AACD","sourcesContent":["import { useState } from \"react\";\r\nconst Authentication = {\r\n  //User : function (){//This is where the token will be validated\r\n  //const [token, setToken] = useToken();\r\n  //let token= \"dsfdsfsdf\";\r\n  //=============== Initial Validation ===================\r\n\r\n  //=============== End of intial validation =============\r\n\r\n  //return true; //true if valid, false if invalid.\r\n  User: function (currentToken, setToken) {\r\n    if(currentToken == null){\r\n      return false;\r\n    }\r\n    else{\r\n      fetch(\"http://localhost:8000/api/v1/authorise_user/\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(currentToken),\r\n      }).then((data)=>data.json())\r\n      .then((valid)=> {\r\n        if(!valid){\r\n\r\n          return false;\r\n        }\r\n        else{\r\n          return true;\r\n        }\r\n      });\r\n    }\r\n  },\r\n};\r\nexport default Authentication;\r\n\r\nasync function validateJWT(token) {\r\n  const response = await fetch(\"http://localhost:8000/api/v1/authorise_user/\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(token),\r\n  });\r\n  const json = await response.json();\r\n  return json;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}