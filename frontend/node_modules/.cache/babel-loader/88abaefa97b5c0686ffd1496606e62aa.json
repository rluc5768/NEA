{"ast":null,"code":"import { useState } from \"react\";\nconst Authentication = {\n  User: function () {\n    //This is where the token will be validated\n    //const [token, setToken] = useToken();\n    let token = \"dsfdsfsdf\"; //=============== Initial Validation ===================\n    //=============== End of intial validation =============\n\n    /*const checkJWT = async () => {\r\n        \r\n        let valid = await validateJWT(token);\r\n        console.log(\"Valid: \"+valid)\r\n        return valid\r\n    }*/\n\n    return validateJWT(token); //return true; //true if valid, false if invalid.\n  }\n};\nexport default Authentication;\n\nfunction validateJWT(token) {\n  return fetch(\"http://localhost:8000/api/v1/authorise_user/\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(token)\n  }).then(data => data.json());\n}","map":{"version":3,"sources":["C:/Users/rober/Documents/Schoolwork/Computer Science/NEA/FinalNEA/frontend/src/Services/Authentication.js"],"names":["useState","Authentication","User","token","validateJWT","fetch","method","headers","body","JSON","stringify","then","data","json"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,IAAI,EAAG,YAAW;AAAC;AACf;AACA,QAAIC,KAAK,GAAE,WAAX,CAFc,CAGd;AAEA;;AACA;AACR;AACA;AACA;AACA;AACA;;AACQ,WAAOC,WAAW,CAACD,KAAD,CAAlB,CAZc,CAed;AACH;AAjBkB,CAAvB;AAmBA,eAAeF,cAAf;;AAEA,SAASG,WAAT,CAAqBD,KAArB,EAA2B;AACvB,SAAOE,KAAK,CAAC,8CAAD,EAAiD;AAC7DC,IAAAA,MAAM,EAAE,MADqD;AAE7DC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFoD;AAK7DC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,KAAf;AALuD,GAAjD,CAAL,CAMNQ,IANM,CAMAC,IAAD,IAAUA,IAAI,CAACC,IAAL,EANT,CAAP;AAOH","sourcesContent":["import {useState} from \"react\";\r\nconst Authentication = {\r\n    User : function (){//This is where the token will be validated\r\n        //const [token, setToken] = useToken();\r\n        let token= \"dsfdsfsdf\";\r\n        //=============== Initial Validation ===================\r\n\r\n        //=============== End of intial validation =============\r\n        /*const checkJWT = async () => {\r\n            \r\n            let valid = await validateJWT(token);\r\n            console.log(\"Valid: \"+valid)\r\n            return valid\r\n        }*/\r\n        return validateJWT(token);\r\n           \r\n        \r\n        //return true; //true if valid, false if invalid.\r\n    }\r\n}\r\nexport default Authentication;\r\n\r\nfunction validateJWT(token){\r\n    return fetch(\"http://localhost:8000/api/v1/authorise_user/\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(token),\r\n  }).then((data) => data.json());\r\n}"]},"metadata":{},"sourceType":"module"}