{"ast":null,"code":"var _jsxFileName = \"D:\\\\SchoolWork\\\\Computer Science\\\\Year 2\\\\NEA\\\\NEA\\\\frontend\\\\src\\\\Pages\\\\PrivateOutlet.js\",\n    _s = $RefreshSig$();\n\nimport { Navigate, Outlet } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport useToken from \"../Hooks/useToken.js\";\nimport Authentication from \"../Services/Authentication\";\nimport React from \"react\";\nimport { Login } from \"./PageImports.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getToken() {\n  //gets the value of token from session storage.\n  console.log(typeof sessionStorage.getItem(\"token\"));\n  return JSON.parse(sessionStorage.getItem(\"token\"));\n}\n\nfunction PrivateOutlet() {\n  _s();\n\n  const [pageState, setPageState] = useState(\"loading\");\n\n  if (pageState === \"loading\") {\n    Authentication.User(getToken(), setPageState);\n  } //const auth = Authentication.User(getToken(), setPageState);\n  //console.log(auth);\n  //If the authentication fails, token should be removed, otherwise remains the same.\n\n\n  if (pageState === \"loading\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n\n  console.log(pageState);\n  return pageState === \"valid\" ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Login, {\n    setPageState: setPageState\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PrivateOutlet, \"yR7oyn6Va1SSJ9o3rx6xLO3AU50=\");\n\n_c = PrivateOutlet;\nexport default PrivateOutlet;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateOutlet\");","map":{"version":3,"sources":["D:/SchoolWork/Computer Science/Year 2/NEA/NEA/frontend/src/Pages/PrivateOutlet.js"],"names":["Navigate","Outlet","useState","useEffect","useToken","Authentication","React","Login","getToken","console","log","sessionStorage","getItem","JSON","parse","PrivateOutlet","pageState","setPageState","User"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,kBAAjC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;;;AACA,SAASC,QAAT,GAAoB;AAClB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAOC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAnB;AACA,SAAOC,IAAI,CAACC,KAAL,CAAWH,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAX,CAAP;AACD;;AAED,SAASG,aAAT,GAAyB;AAAA;;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,SAAD,CAA1C;;AAEA,MAAIc,SAAS,KAAK,SAAlB,EAA6B;AAC3BX,IAAAA,cAAc,CAACa,IAAf,CAAoBV,QAAQ,EAA5B,EAAgCS,YAAhC;AACD,GALsB,CAOvB;AACA;AACA;;;AACA,MAAID,SAAS,KAAK,SAAlB,EAA6B;AAC3B,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACDP,EAAAA,OAAO,CAACC,GAAR,CAAYM,SAAZ;AACA,SAAOA,SAAS,KAAK,OAAd,gBACL,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UADK,gBAGL,QAAC,KAAD;AAAO,IAAA,YAAY,EAAEC;AAArB;AAAA;AAAA;AAAA;AAAA,UAHF;AAKD;;GAnBQF,a;;KAAAA,a;AAoBT,eAAeA,aAAf","sourcesContent":["import { Navigate, Outlet } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport useToken from \"../Hooks/useToken.js\";\r\nimport Authentication from \"../Services/Authentication\";\r\nimport React from \"react\";\r\nimport { Login } from \"./PageImports.js\";\r\nfunction getToken() {\r\n  //gets the value of token from session storage.\r\n  console.log(typeof sessionStorage.getItem(\"token\"));\r\n  return JSON.parse(sessionStorage.getItem(\"token\"));\r\n}\r\n\r\nfunction PrivateOutlet() {\r\n  const [pageState, setPageState] = useState(\"loading\");\r\n\r\n  if (pageState === \"loading\") {\r\n    Authentication.User(getToken(), setPageState);\r\n  }\r\n\r\n  //const auth = Authentication.User(getToken(), setPageState);\r\n  //console.log(auth);\r\n  //If the authentication fails, token should be removed, otherwise remains the same.\r\n  if (pageState === \"loading\") {\r\n    return <div>loading</div>;\r\n  }\r\n  console.log(pageState);\r\n  return pageState === \"valid\" ? (\r\n    <Outlet />\r\n  ) : (\r\n    <Login setPageState={setPageState} />\r\n  );\r\n}\r\nexport default PrivateOutlet;\r\n"]},"metadata":{},"sourceType":"module"}