{"ast":null,"code":"var _jsxFileName = \"D:\\\\SchoolWork\\\\Computer Science\\\\Year 2\\\\NEA\\\\NEA\\\\frontend\\\\src\\\\Pages\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport { useLocation, useNavigate, useSearchParams } from \"react-router-dom\";\nimport { Map, ActivityList, LoadAndSort } from \"../Components/ComponentImports\";\nimport \"./Home.css\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { APIGet } from \"../External/ApiHelper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction getToken() {\n  //gets the value of token from session storage.\n  try {\n    return JSON.parse(sessionStorage.getItem(\"token\"));\n  } catch (e) {\n    sessionStorage.removeItem(\"token\");\n  }\n}\n\nfunction Home() {\n  _s();\n\n  //if there is a validation_error then log the user out.\n  const [radioButtonChecked, setRadioButtonChecked] = useState(\"before\");\n  const [dateChosen, setDateChosen] = useState();\n  const [activities, setActivities] = useState();\n  const search = useLocation().search;\n  console.log(search);\n  console.log(new URLSearchParams(search).get(\"code\")); //get all activites from database (will happen on page load)\n\n  useEffect(() => {\n    refreshActivities();\n  }, []);\n\n  const refreshActivities = function () {\n    console.log(\"loaded\");\n    APIGet(\"http://localhost:8000/api/v1/\", \"activity/\", true).then(res => {\n      console.log(res);\n\n      if (res[\"type\"] == \"success\") {\n        console.log(Object.keys(res[\"activities\"]).length);\n\n        if (Object.keys(res[\"activities\"]).length > 0) {\n          //do something with the activities (add to activity list)\n          console.log(\"SAVED!!!\");\n          setActivities(res[\"activites\"]);\n          console.log(activities);\n        }\n      } else {//handle error.\n      }\n    });\n  };\n\n  let scope = new URLSearchParams(search).get(\"scope\");\n  console.log(\"scope: \" + scope);\n\n  if (scope == \"read,activity:read_all\") {\n    //Will check the previous url to stop 'bad requests' or clear search params.\n    let code = new URLSearchParams(search).get(\"code\");\n    var uri = window.location.toString(); //from https://onlinecode.org/jquery-remove-query-string-parameter-from-url-expertphp/\n\n    var clean_uri = uri.substring(0, uri.indexOf(\"?\"));\n    window.history.replaceState({}, document.title, clean_uri);\n    console.log(code);\n    fetch(\"https://www.strava.com/oauth/token\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        client_id: 53221,\n        client_secret: \"1a3a01f913e69e0868315901ebb13c27aae61dd4\",\n        //would be hidden.\n        code: code,\n        grant_type: \"authorization_code\"\n      })\n    }).then(data => data.json()).then(res => {\n      try {\n        if (\"token_type\" in res) {\n          //given token\n          //Save tokens in database and set stravaAuthorised to true. THen can make requests.\n          //PUT request to \"/user\" to update user profile.\n          fetch(\"http://localhost:8000/api/v1/user/\", {\n            method: \"PUT\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: getToken()\n            },\n            body: JSON.stringify({\n              stravaAuthorised: true,\n              stravaAccessToken: res[\"access_token\"],\n              stravaRefreshToken: res[\"refresh_token\"],\n              stravaAccessTokenExpiresAt: res[\"expires_at\"]\n            })\n          });\n        } else {\n          //handle errors\n          console.log(res);\n        }\n      } catch (e) {}\n    });\n  }\n\n  const HandleClick = function () {\n    //First check if the user is strava_authorised. by calling get on \"/user\"\n    //IF NOT strava authorised, redirected to strava login, url checked and user details modified.\n    fetch(\"http://localhost:8000/api/v1/user/\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${getToken()}`\n      }\n    }).then(data => data.json()).then(res => {\n      if (res[\"type\"] == \"user_details\") {\n        //successful\n        let userDetails = res[\"details\"];\n\n        if (!userDetails[\"stravaAuthorised\"]) {\n          //redirect to strava oauth page.\n          window.location = \"https://www.strava.com/oauth/authorize?client_id=53221&redirect_uri=http://localhost:3000/home&response_type=code&scope=activity:read_all\";\n        } else {\n          //Make strava request here.\n          //Check if access token is expired before making request.\n          console.log(`https://www.strava.com/api/v3/athlete/activities?${radioButtonChecked}=${dateChosen}`);\n          fetch(`https://www.strava.com/api/v3/athlete/activities?${radioButtonChecked}=${dateChosen}`, {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${userDetails[\"stravaAccessToken\"]}`\n            }\n          }).then(data => data.json()).then(response => {\n            console.log(\"Getting HERE!\");\n            console.log(response);\n\n            if (!(\"errors\" in response)) {\n              //Send array to \"/activity\" POST to add to database if the activity isn't already there.\n              fetch(\"http://localhost:8000/api/v1/activity/\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Authorization: \"Bearer \".concat(getToken())\n                },\n                body: JSON.stringify({\n                  activities: response\n                })\n              }).then(d => d.json()).then(r => {\n                console.log(\"refresh\");\n                refreshActivities();\n              });\n            }\n          });\n        }\n\n        console.log(userDetails);\n      } else {\n        //unsuccessful - handle errors\n        console.log(res);\n      }\n    });\n  };\n\n  const HandleRadioCheck = function (e) {\n    console.log(e.target.value);\n    setRadioButtonChecked(e.target.value);\n  };\n\n  const HandleDateChange = function (e) {\n    console.log(new Date(e.target.value).getTime());\n    setDateChosen(new Date(e.target.value).getTime());\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      id: \"grid-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row show-grid h-75\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col col-md-7\",\n          children: /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col col-md-5\",\n          children: /*#__PURE__*/_jsxDEV(ActivityList, {\n            activities: activities\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col col-md-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary loadbutton\",\n            onClick: e => HandleClick(e),\n            children: \"Load\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                value: \"before\",\n                name: \"BeforeOrAfter\",\n                onClick: HandleRadioCheck\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this), \"Before\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                value: \"after\",\n                name: \"BeforeOrAfter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this), \"After\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"dateFilter\",\n            onChange: e => HandleDateChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Home, \"WD9MpxFa81PA0YMst+f6/utlFMk=\", false, function () {\n  return [useLocation];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/SchoolWork/Computer Science/Year 2/NEA/NEA/frontend/src/Pages/Home.js"],"names":["useLocation","useNavigate","useSearchParams","Map","ActivityList","LoadAndSort","useEffect","useRef","useState","APIGet","getToken","JSON","parse","sessionStorage","getItem","e","removeItem","Home","radioButtonChecked","setRadioButtonChecked","dateChosen","setDateChosen","activities","setActivities","search","console","log","URLSearchParams","get","refreshActivities","then","res","Object","keys","length","scope","code","uri","window","location","toString","clean_uri","substring","indexOf","history","replaceState","document","title","fetch","method","headers","body","stringify","client_id","client_secret","grant_type","data","json","Authorization","stravaAuthorised","stravaAccessToken","stravaRefreshToken","stravaAccessTokenExpiresAt","HandleClick","userDetails","response","concat","d","r","HandleRadioCheck","target","value","HandleDateChange","Date","getTime"],"mappings":"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","sourcesContent":["import { useLocation, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport { Map, ActivityList, LoadAndSort } from \"../Components/ComponentImports\";\r\nimport \"./Home.css\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { APIGet } from \"../External/ApiHelper\";\r\nfunction getToken() {\r\n  //gets the value of token from session storage.\r\n  try {\r\n    return JSON.parse(sessionStorage.getItem(\"token\"));\r\n  } catch (e) {\r\n    sessionStorage.removeItem(\"token\");\r\n  }\r\n}\r\n\r\nfunction Home() {\r\n  //if there is a validation_error then log the user out.\r\n\r\n  const [radioButtonChecked, setRadioButtonChecked] = useState(\"before\");\r\n  const [dateChosen, setDateChosen] = useState();\r\n  const [activities, setActivities] = useState();\r\n  const search = useLocation().search;\r\n  console.log(search);\r\n  console.log(new URLSearchParams(search).get(\"code\"));\r\n\r\n  //get all activites from database (will happen on page load)\r\n  useEffect(() => {\r\n    refreshActivities();\r\n  }, []);\r\n  const refreshActivities = function () {\r\n    console.log(\"loaded\");\r\n    APIGet(\"http://localhost:8000/api/v1/\", \"activity/\", true).then((res) => {\r\n      console.log(res);\r\n\r\n      if (res[\"type\"] == \"success\") {\r\n        console.log(Object.keys(res[\"activities\"]).length);\r\n        if (Object.keys(res[\"activities\"]).length > 0) {\r\n          //do something with the activities (add to activity list)\r\n          console.log(\"SAVED!!!\");\r\n\r\n          setActivities(res[\"activites\"]);\r\n          console.log(activities);\r\n        }\r\n      } else {\r\n        //handle error.\r\n      }\r\n    });\r\n  };\r\n\r\n  let scope = new URLSearchParams(search).get(\"scope\");\r\n  console.log(\"scope: \" + scope);\r\n  if (scope == \"read,activity:read_all\") {\r\n    //Will check the previous url to stop 'bad requests' or clear search params.\r\n    let code = new URLSearchParams(search).get(\"code\");\r\n    var uri = window.location.toString(); //from https://onlinecode.org/jquery-remove-query-string-parameter-from-url-expertphp/\r\n    var clean_uri = uri.substring(0, uri.indexOf(\"?\"));\r\n    window.history.replaceState({}, document.title, clean_uri);\r\n\r\n    console.log(code);\r\n    fetch(\"https://www.strava.com/oauth/token\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        client_id: 53221,\r\n        client_secret: \"1a3a01f913e69e0868315901ebb13c27aae61dd4\", //would be hidden.\r\n        code: code,\r\n        grant_type: \"authorization_code\",\r\n      }),\r\n    })\r\n      .then((data) => data.json())\r\n      .then((res) => {\r\n        try {\r\n          if (\"token_type\" in res) {\r\n            //given token\r\n            //Save tokens in database and set stravaAuthorised to true. THen can make requests.\r\n            //PUT request to \"/user\" to update user profile.\r\n            fetch(\"http://localhost:8000/api/v1/user/\", {\r\n              method: \"PUT\",\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: getToken(),\r\n              },\r\n              body: JSON.stringify({\r\n                stravaAuthorised: true,\r\n                stravaAccessToken: res[\"access_token\"],\r\n                stravaRefreshToken: res[\"refresh_token\"],\r\n                stravaAccessTokenExpiresAt: res[\"expires_at\"],\r\n              }),\r\n            });\r\n          } else {\r\n            //handle errors\r\n            console.log(res);\r\n          }\r\n        } catch (e) {}\r\n      });\r\n  }\r\n  const HandleClick = function () {\r\n    //First check if the user is strava_authorised. by calling get on \"/user\"\r\n    //IF NOT strava authorised, redirected to strava login, url checked and user details modified.\r\n    fetch(\"http://localhost:8000/api/v1/user/\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${getToken()}`,\r\n      },\r\n    })\r\n      .then((data) => data.json())\r\n      .then((res) => {\r\n        if (res[\"type\"] == \"user_details\") {\r\n          //successful\r\n          let userDetails = res[\"details\"];\r\n          if (!userDetails[\"stravaAuthorised\"]) {\r\n            //redirect to strava oauth page.\r\n            window.location =\r\n              \"https://www.strava.com/oauth/authorize?client_id=53221&redirect_uri=http://localhost:3000/home&response_type=code&scope=activity:read_all\";\r\n          } else {\r\n            //Make strava request here.\r\n            //Check if access token is expired before making request.\r\n            console.log(\r\n              `https://www.strava.com/api/v3/athlete/activities?${radioButtonChecked}=${dateChosen}`\r\n            );\r\n            fetch(\r\n              `https://www.strava.com/api/v3/athlete/activities?${radioButtonChecked}=${dateChosen}`,\r\n              {\r\n                method: \"GET\",\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                  Authorization: `Bearer ${userDetails[\"stravaAccessToken\"]}`,\r\n                },\r\n              }\r\n            )\r\n              .then((data) => data.json())\r\n              .then((response) => {\r\n                console.log(\"Getting HERE!\");\r\n                console.log(response);\r\n                if (!(\"errors\" in response)) {\r\n                  //Send array to \"/activity\" POST to add to database if the activity isn't already there.\r\n                  fetch(\"http://localhost:8000/api/v1/activity/\", {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                      \"Content-Type\": \"application/json\",\r\n                      Authorization: \"Bearer \".concat(getToken()),\r\n                    },\r\n                    body: JSON.stringify({ activities: response }),\r\n                  })\r\n                    .then((d) => d.json())\r\n                    .then((r) => {\r\n                      console.log(\"refresh\");\r\n                      refreshActivities();\r\n                    });\r\n                }\r\n              });\r\n          }\r\n          console.log(userDetails);\r\n        } else {\r\n          //unsuccessful - handle errors\r\n          console.log(res);\r\n        }\r\n      });\r\n  };\r\n  const HandleRadioCheck = function (e) {\r\n    console.log(e.target.value);\r\n    setRadioButtonChecked(e.target.value);\r\n  };\r\n  const HandleDateChange = function (e) {\r\n    console.log(new Date(e.target.value).getTime());\r\n    setDateChosen(new Date(e.target.value).getTime());\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid\" id=\"grid-container\">\r\n        <div className=\"row show-grid h-75\">\r\n          <div className=\"col col-md-7\">\r\n            <Map />\r\n          </div>\r\n          <div className=\"col col-md-5\">\r\n            <ActivityList activities={activities} />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-7\"></div>\r\n          <div className=\"col col-md-5\">\r\n            <button\r\n              className=\"btn btn-primary loadbutton\"\r\n              onClick={(e) => HandleClick(e)}\r\n            >\r\n              Load\r\n            </button>\r\n            <div>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  value=\"before\"\r\n                  name=\"BeforeOrAfter\"\r\n                  onClick={HandleRadioCheck}\r\n                />\r\n                Before\r\n              </label>\r\n              <label>\r\n                <input type=\"radio\" value=\"after\" name=\"BeforeOrAfter\" />\r\n                After\r\n              </label>\r\n            </div>\r\n            <input\r\n              type=\"date\"\r\n              id=\"dateFilter\"\r\n              onChange={(e) => HandleDateChange(e)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}