{"ast":null,"code":"var _jsxFileName = \"D:\\\\SchoolWork\\\\Computer Science\\\\Year 2\\\\NEA\\\\NEA\\\\frontend\\\\src\\\\Pages\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nasync function loginUser(userDetails) {\n  return fetch(\"http://localhost:8000/api/v1/login/\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(userDetails)\n  }).then(data => data.json());\n}\n\nfunction Login(_ref) {\n  _s();\n\n  let {\n    setToken\n  } = _ref;\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const navigate = useNavigate();\n\n  const HandleSubmit = async event => {\n    event.preventDefault(); //Prevents the default form action for Ajax form submissions.\n\n    const response = await loginUser({\n      username,\n      password\n    }); //console.log(\"token: \" + JSON.stringify(token));\n\n    response.forEach(item => {\n      if (\"token\" in item) {\n        console.log(\"SUCCESS\");\n      }\n    });\n    /*if (\"token\" in token) {\r\n      setToken(token);\r\n      navigate(\"/home\");\r\n    } //Deal with errors here.*/\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Please login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: HandleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Login, \"1/pR21YbgaGeldLWw/wG9iHvQ/w=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/SchoolWork/Computer Science/Year 2/NEA/NEA/frontend/src/Pages/Login.js"],"names":["useState","Navigate","useNavigate","loginUser","userDetails","fetch","method","headers","body","JSON","stringify","then","data","json","Login","setToken","username","setUsername","password","setPassword","navigate","HandleSubmit","event","preventDefault","response","forEach","item","console","log","e","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,kBAAtC;;;;AACA,eAAeC,SAAf,CAAyBC,WAAzB,EAAsC;AACpC,SAAOC,KAAK,CAAC,qCAAD,EAAwC;AAClDC,IAAAA,MAAM,EAAE,MAD0C;AAElDC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFyC;AAKlDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,WAAf;AAL4C,GAAxC,CAAL,CAMJO,IANI,CAMEC,IAAD,IAAUA,IAAI,CAACC,IAAL,EANX,CAAP;AAOD;;AACD,SAASC,KAAT,OAA6B;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,EAAxC;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,EAAxC;AACA,QAAMoB,QAAQ,GAAGlB,WAAW,EAA5B;;AAEA,QAAMmB,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACC,cAAN,GADoC,CACZ;;AACxB,UAAMC,QAAQ,GAAG,MAAMrB,SAAS,CAAC;AAC/Ba,MAAAA,QAD+B;AAE/BE,MAAAA;AAF+B,KAAD,CAAhC,CAFoC,CAMpC;;AACAM,IAAAA,QAAQ,CAACC,OAAT,CAAkBC,IAAD,IAAU;AACzB,UAAI,WAAWA,IAAf,EAAqB;AACnBC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;AACF,KAJD;AAKA;AACJ;AACA;AACA;AACG,GAhBD;;AAiBA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEP,YAAhB;AAAA,8BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAGQ,CAAD,IAAOZ,WAAW,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,QAAQ,EAAGF,CAAD,IAAOV,WAAW,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV;AAF9B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAYE;AAAA,+BACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAqBD;;GA3CQjB,K;UAGUZ,W;;;KAHVY,K;AA4CT,eAAeA,KAAf","sourcesContent":["import { useState } from \"react\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nasync function loginUser(userDetails) {\r\n  return fetch(\"http://localhost:8000/api/v1/login/\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(userDetails),\r\n  }).then((data) => data.json());\r\n}\r\nfunction Login({ setToken }) {\r\n  const [username, setUsername] = useState();\r\n  const [password, setPassword] = useState();\r\n  const navigate = useNavigate();\r\n\r\n  const HandleSubmit = async (event) => {\r\n    event.preventDefault(); //Prevents the default form action for Ajax form submissions.\r\n    const response = await loginUser({\r\n      username,\r\n      password,\r\n    });\r\n    //console.log(\"token: \" + JSON.stringify(token));\r\n    response.forEach((item) => {\r\n      if (\"token\" in item) {\r\n        console.log(\"SUCCESS\");\r\n      }\r\n    });\r\n    /*if (\"token\" in token) {\r\n      setToken(token);\r\n      navigate(\"/home\");\r\n    } //Deal with errors here.*/\r\n  };\r\n  return (\r\n    <>\r\n      <h1>Please login</h1>\r\n      <form onSubmit={HandleSubmit}>\r\n        <label>\r\n          <p>Username</p>\r\n          <input type=\"text\" onChange={(e) => setUsername(e.target.value)} />\r\n        </label>\r\n        <label>\r\n          <p>Password</p>\r\n          <input\r\n            type=\"password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </label>\r\n        <div>\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}