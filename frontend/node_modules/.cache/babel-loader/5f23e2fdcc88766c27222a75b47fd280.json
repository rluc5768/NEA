{"ast":null,"code":"var _jsxFileName = \"D:\\\\SchoolWork\\\\Computer Science\\\\Year 2\\\\NEA\\\\NEA\\\\frontend\\\\src\\\\Pages\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport { Link, Navigate, useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport useToken from \"../Hooks/useToken.js\";\nimport \"./SignUp.css\";\nimport ValidateInputs from \"../ExternalClasses/InputValidationClass\";\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SignUp(_ref) {\n  _s();\n\n  let {\n    setToken\n  } = _ref;\n  const [firstNameValid, setfirstNameValid] = useState(false);\n  const [surnameValid, setSurnameValid] = useState(false);\n  const [emailValid, setEmailValid] = useState(false);\n  const [usernameValid, setUsernameValid] = useState(false);\n  const [passwordValid, setPasswordValid] = useState(false);\n  const [invalidData, setInvalidData] = useState(\"\");\n  let VI = useRef(new ValidateInputs());\n\n  const HandleSubmit = async function () {\n    let errors = VI.current.allInputs(\"signUp\");\n\n    if (errors.length == 0) {\n      try {\n        //POST\n        await fetch(\"http://localhost:8000/api/v1/user/\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            firstName: VI.current.firstName,\n            surname: VI.current.surname,\n            email: VI.current.email,\n            username: VI.current.username,\n            password: VI.current.password\n          })\n        }).then(data => data.json()).then(response => {\n          if (response[\"type\"] == \"validation_error\") {\n            //handle error\n            ChangeInputState(Object.keys(response[\"errors\"])); //Object.keys() returns a list of keys from the dictionary.\n          } else {//save token in session storage.\n          }\n        });\n      } catch (e) {\n        console.log(\"error\" + e);\n        setInvalidData(\"Error occured.\");\n      }\n    } else {\n      ChangeInputState(errors);\n      setInvalidData(\"Invalid data entered.\");\n    }\n  };\n\n  const ChangeInputState = errors => {\n    for (let i = 0; i < errors.length; i++) {\n      switch (errors[i]) {\n        case \"InvalidFirstName\":\n          setfirstNameValid(false);\n          break;\n\n        case \"InvalidSurname\":\n          setSurnameValid(false);\n          break;\n\n        case \"InvalidEmail\":\n          setEmailValid(false);\n          break;\n\n        case \"UsernameInvalid\":\n          setUsernameValid(false);\n          break;\n\n        case \"passwordInvalid\":\n          setPasswordValid(false);\n          break;\n\n        default:\n          break;\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: invalidData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"signUpForm\",\n        onSubmit: HandleSubmit,\n        action: \"#\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstNameInput\",\n            className: \"form-label col-sm-2\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-4\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: `form-control ${firstNameValid ? \"validInput\" : \"invalidInput\"}`,\n              placeholder: \"e.g. Robert\",\n              id: \"firstNameInput\",\n              onChange: e => {\n                VI.current.firstName = e.target.value;\n                setfirstNameValid(VI.current.validateFirstName());\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"surnameInput\",\n            className: \"form-label col-sm-2\",\n            children: \"Surname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-4\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: `form-control ${surnameValid ? \"validInput\" : \"invalidInput\"}`,\n              placeholder: \"e.g. Lucas\",\n              id: \"surnameInput\",\n              onChange: e => {\n                console.log(e.target.value);\n                VI.current.surname = e.target.value;\n                setSurnameValid(VI.current.validateSurname());\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"emailInput\",\n            className: \"form-label col-sm-2\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-10\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: `form-control ${emailValid ? \"validInput\" : \"invalidInput\"}`,\n              placeholder: \"email@example.com\",\n              id: \"emailInput\",\n              onChange: e => {\n                VI.current.email = e.target.value;\n                setEmailValid(VI.current.validateEmail());\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"usernameInput\",\n            className: \"form-label col-sm-2\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-10\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: `form-control ${usernameValid ? \"validInput\" : \"invalidInput\"}`,\n              placeholder: \"Username\",\n              id: \"usernameInput\",\n              onChange: e => {\n                VI.current.username = e.target.value;\n                setUsernameValid(VI.current.validateUsername());\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"passwordInput\",\n            className: \"form-label col-sm-2\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: `form-control ${passwordValid ? \"validInput\" : \"invalidInput\"}`,\n              placeholder: \"Password\",\n              id: \"passwordInput\",\n              onChange: e => {\n                VI.current.password = e.target.value;\n                setPasswordValid(VI.current.validatePassword());\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit\",\n            className: \"btn btn-outline-success col-sm-6 center\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center\",\n        children: [\"Already have an account? sign in \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SignUp, \"H8vFU6BQ9RWLBnLIwIJvkB5W49E=\");\n\n_c = SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["D:/SchoolWork/Computer Science/Year 2/NEA/NEA/frontend/src/Pages/SignUp.js"],"names":["Link","Navigate","useNavigate","useState","useToken","ValidateInputs","useRef","SignUp","setToken","firstNameValid","setfirstNameValid","surnameValid","setSurnameValid","emailValid","setEmailValid","usernameValid","setUsernameValid","passwordValid","setPasswordValid","invalidData","setInvalidData","VI","HandleSubmit","errors","current","allInputs","length","fetch","method","headers","body","JSON","stringify","firstName","surname","email","username","password","then","data","json","response","ChangeInputState","Object","keys","e","console","log","i","target","value","validateFirstName","validateSurname","validateEmail","validateUsername","validatePassword"],"mappings":"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","sourcesContent":["import { Link, Navigate, useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport useToken from \"../Hooks/useToken.js\";\r\nimport \"./SignUp.css\";\r\nimport ValidateInputs from \"../ExternalClasses/InputValidationClass\";\r\nimport { useRef } from \"react\";\r\nexport default function SignUp({ setToken }) {\r\n  const [firstNameValid, setfirstNameValid] = useState(false);\r\n  const [surnameValid, setSurnameValid] = useState(false);\r\n  const [emailValid, setEmailValid] = useState(false);\r\n  const [usernameValid, setUsernameValid] = useState(false);\r\n  const [passwordValid, setPasswordValid] = useState(false);\r\n  const [invalidData, setInvalidData] = useState(\"\");\r\n  let VI = useRef(new ValidateInputs());\r\n\r\n  const HandleSubmit = async function () {\r\n    let errors = VI.current.allInputs(\"signUp\");\r\n\r\n    if (errors.length == 0) {\r\n      try {\r\n        //POST\r\n        await fetch(\"http://localhost:8000/api/v1/user/\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            firstName: VI.current.firstName,\r\n            surname: VI.current.surname,\r\n            email: VI.current.email,\r\n            username: VI.current.username,\r\n            password: VI.current.password,\r\n          }),\r\n        })\r\n          .then((data) => data.json())\r\n          .then((response) => {\r\n            if (response[\"type\"] == \"validation_error\") {\r\n              //handle error\r\n              ChangeInputState(Object.keys(response[\"errors\"])); //Object.keys() returns a list of keys from the dictionary.\r\n            } else {\r\n              //save token in session storage.\r\n            }\r\n          });\r\n      } catch (e) {\r\n        console.log(\"error\" + e);\r\n        setInvalidData(\"Error occured.\");\r\n      }\r\n    } else {\r\n      ChangeInputState(errors);\r\n      setInvalidData(\"Invalid data entered.\");\r\n    }\r\n  };\r\n  const ChangeInputState = (errors) => {\r\n    for (let i = 0; i < errors.length; i++) {\r\n      switch (errors[i]) {\r\n        case \"InvalidFirstName\":\r\n          setfirstNameValid(false);\r\n          break;\r\n        case \"InvalidSurname\":\r\n          setSurnameValid(false);\r\n          break;\r\n        case \"InvalidEmail\":\r\n          setEmailValid(false);\r\n          break;\r\n        case \"UsernameInvalid\":\r\n          setUsernameValid(false);\r\n          break;\r\n        case \"passwordInvalid\":\r\n          setPasswordValid(false);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>{invalidData}</h1>\r\n      <div className=\"container\">\r\n        <form id=\"signUpForm\" onSubmit={HandleSubmit} action=\"#\">\r\n          <div className=\"row\">\r\n            <label htmlFor=\"firstNameInput\" className=\"form-label col-sm-2\">\r\n              First Name\r\n            </label>\r\n            <div className=\"col-sm-4\">\r\n              <input\r\n                type=\"text\"\r\n                className={`form-control ${\r\n                  firstNameValid ? \"validInput\" : \"invalidInput\"\r\n                }`}\r\n                placeholder=\"e.g. Robert\"\r\n                id=\"firstNameInput\"\r\n                onChange={(e) => {\r\n                  VI.current.firstName = e.target.value;\r\n                  setfirstNameValid(VI.current.validateFirstName());\r\n                }}\r\n              />\r\n            </div>\r\n            <label htmlFor=\"surnameInput\" className=\"form-label col-sm-2\">\r\n              Surname\r\n            </label>\r\n            <div className=\"col-sm-4\">\r\n              <input\r\n                type=\"text\"\r\n                className={`form-control ${\r\n                  surnameValid ? \"validInput\" : \"invalidInput\"\r\n                }`}\r\n                placeholder=\"e.g. Lucas\"\r\n                id=\"surnameInput\"\r\n                onChange={(e) => {\r\n                  console.log(e.target.value);\r\n                  VI.current.surname = e.target.value;\r\n                  setSurnameValid(VI.current.validateSurname());\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <label htmlFor=\"emailInput\" className=\"form-label col-sm-2\">\r\n              Email\r\n            </label>\r\n            <div className=\"col-sm-10\">\r\n              <input\r\n                type=\"text\"\r\n                className={`form-control ${\r\n                  emailValid ? \"validInput\" : \"invalidInput\"\r\n                }`}\r\n                placeholder=\"email@example.com\"\r\n                id=\"emailInput\"\r\n                onChange={(e) => {\r\n                  VI.current.email = e.target.value;\r\n                  setEmailValid(VI.current.validateEmail());\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"usernameInput\" className=\"form-label col-sm-2\">\r\n              Username\r\n            </label>\r\n            <div className=\"col-sm-10\">\r\n              <input\r\n                type=\"text\"\r\n                className={`form-control ${\r\n                  usernameValid ? \"validInput\" : \"invalidInput\"\r\n                }`}\r\n                placeholder=\"Username\"\r\n                id=\"usernameInput\"\r\n                onChange={(e) => {\r\n                  VI.current.username = e.target.value;\r\n                  setUsernameValid(VI.current.validateUsername());\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"passwordInput\" className=\"form-label col-sm-2\">\r\n              Password\r\n            </label>\r\n            <div className=\"col\">\r\n              <input\r\n                type=\"password\"\r\n                className={`form-control ${\r\n                  passwordValid ? \"validInput\" : \"invalidInput\"\r\n                }`}\r\n                placeholder=\"Password\"\r\n                id=\"passwordInput\"\r\n                onChange={(e) => {\r\n                  VI.current.password = e.target.value;\r\n                  setPasswordValid(VI.current.validatePassword());\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-3\" />\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Submit\"\r\n              className=\"btn btn-outline-success col-sm-6 center\"\r\n            />\r\n          </div>\r\n        </form>\r\n        <br />\r\n        <p className=\"text-center\">\r\n          Already have an account? sign in <Link to=\"/login\">here.</Link>\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}