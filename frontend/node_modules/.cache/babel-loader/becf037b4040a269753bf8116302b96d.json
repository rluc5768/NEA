{"ast":null,"code":"import { useState } from \"react\";\nconst Authentication = {\n  User: function () {\n    //This is where the token will be validated\n    //const [token, setToken] = useToken();\n    let token = \"dsfdsfsdf\"; //=============== Initial Validation ===================\n    //=============== End of intial validation =============\n\n    /*const checkJWT = async () => {\r\n        \r\n        let valid = await validateJWT(token);\r\n        console.log(\"Valid: \"+valid)\r\n        return valid\r\n    }*/\n\n    const checkJWT = async () => {\n      return await validateJWT(token);\n    };\n\n    return checkJWT(); // console.log(a(token));\n    //p.then((v) => {return v})\n    //return false;\n    //return true; //true if valid, false if invalid.\n  }\n};\nexport default Authentication;\n\nconst a = token => {\n  validateJWT(token).then(a => {\n    console.log(\"result: \" + a);\n  });\n};\n\nasync function validateJWT(token) {\n  return fetch(\"http://localhost:8000/api/v1/authorise_user/\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(token)\n  }).then(data => data.json());\n}","map":{"version":3,"sources":["C:/Users/rober/Documents/Schoolwork/Computer Science/NEA/FinalNEA/frontend/src/Services/Authentication.js"],"names":["useState","Authentication","User","token","checkJWT","validateJWT","a","then","console","log","fetch","method","headers","body","JSON","stringify","data","json"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,IAAI,EAAG,YAAW;AAAC;AACf;AACA,QAAIC,KAAK,GAAE,WAAX,CAFc,CAGd;AAEA;;AACA;AACR;AACA;AACA;AACA;AACA;;AAEQ,UAAMC,QAAQ,GAAG,YAAY;AAC3B,aAAO,MAAMC,WAAW,CAACF,KAAD,CAAxB;AACD,KAFD;;AAGA,WAAOC,QAAQ,EAAf,CAhBc,CAiBf;AAEC;AACA;AAEA;AACH;AAxBkB,CAAvB;AA0BA,eAAeH,cAAf;;AACA,MAAMK,CAAC,GAAIH,KAAD,IAAW;AACnBE,EAAAA,WAAW,CAACF,KAAD,CAAX,CAAmBI,IAAnB,CAAyBD,CAAD,IAAK;AAACE,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAWH,CAAvB;AAA0B,GAAxD;AACD,CAFD;;AAGA,eAAeD,WAAf,CAA2BF,KAA3B,EAAiC;AAC7B,SAAOO,KAAK,CAAC,8CAAD,EAAiD;AAC7DC,IAAAA,MAAM,EAAE,MADqD;AAE7DC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFoD;AAK7DC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,KAAf;AALuD,GAAjD,CAAL,CAMNI,IANM,CAMAS,IAAD,IAAUA,IAAI,CAACC,IAAL,EANT,CAAP;AAOH","sourcesContent":["import {useState} from \"react\";\r\nconst Authentication = {\r\n    User : function (){//This is where the token will be validated\r\n        //const [token, setToken] = useToken();\r\n        let token= \"dsfdsfsdf\";\r\n        //=============== Initial Validation ===================\r\n\r\n        //=============== End of intial validation =============\r\n        /*const checkJWT = async () => {\r\n            \r\n            let valid = await validateJWT(token);\r\n            console.log(\"Valid: \"+valid)\r\n            return valid\r\n        }*/\r\n        \r\n        const checkJWT = async () => {\r\n          return await validateJWT(token);\r\n        }\r\n        return checkJWT();\r\n       // console.log(a(token));\r\n        \r\n        //p.then((v) => {return v})\r\n        //return false;\r\n        \r\n        //return true; //true if valid, false if invalid.\r\n    }\r\n}\r\nexport default Authentication;\r\nconst a = (token) => {\r\n  validateJWT(token).then((a)=>{console.log(\"result: \"+a)})\r\n}\r\nasync function validateJWT(token){\r\n    return fetch(\"http://localhost:8000/api/v1/authorise_user/\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(token),\r\n  }).then((data) => data.json());\r\n}"]},"metadata":{},"sourceType":"module"}