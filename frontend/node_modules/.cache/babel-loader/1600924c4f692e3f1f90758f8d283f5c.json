{"ast":null,"code":"var _jsxFileName = \"D:\\\\SchoolWork\\\\Computer Science\\\\Year 2\\\\NEA\\\\NEA\\\\frontend\\\\src\\\\Pages\\\\CreateWorkout.js\",\n    _s = $RefreshSig$();\n\nimport \"./CreateWorkout.css\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { APIGet, APIPost } from \"../External/ApiHelper\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateWorkout() {\n  _s();\n\n  const PossibleExercises = useRef();\n  const [togglePopUp, setTogglePopUp] = useState(false);\n  const [AddExerciseExercise, setAddExerciseExercise] = useState(\"Bench press\");\n  const [AddExerciseSets, setAddExerciseSets] = useState();\n  const [AddExerciseReps, setAddExerciseReps] = useState();\n  const [AddExerciseWeight, setAddExerciseWeight] = useState();\n  const [mondayWorkout, setMondayWorkout] = useState([]);\n  const [tuesdayWorkout, setTuesdayWorkout] = useState([]);\n  const [wednesdayWorkout, setWednesdayWorkout] = useState([]);\n  const [thursdayWorkout, setThursdayWorkout] = useState([]);\n  const [fridayWorkout, setFridayWorkout] = useState([]);\n  const [saturdayWorkout, setSaturdayWorkout] = useState([]);\n  const [sundayWorkout, setSundayWorkout] = useState([]);\n  const [whichAddButton, setWhichAddButton] = useState();\n  const [workoutPlanName, setWorkoutPlanName] = useState();\n  const navigate = useNavigate();\n  useEffect(() => {\n    console.log(mondayWorkout); //on page load\n\n    APIGet(\"http://localhost:8000/api/v1/\", \"exercises\", true).then(res => {\n      PossibleExercises.current = res;\n      console.log(PossibleExercises.current);\n    });\n  }, []);\n\n  const HandleAddExercise = function (day) {\n    setWhichAddButton(day);\n\n    if (!togglePopUp) {\n      setTogglePopUp(true);\n    }\n  };\n\n  const HandleAddExerciseSubmit = function (e, setStateArr) {\n    e.preventDefault();\n    setTogglePopUp(false);\n    console.dir({\n      name: AddExerciseExercise,\n      sets: AddExerciseSets,\n      reps: AddExerciseReps,\n      weight: AddExerciseWeight\n    }); //Check all fields are filled in\n\n    if (AddExerciseExercise == undefined || AddExerciseSets == undefined || AddExerciseReps == undefined || AddExerciseWeight == undefined) {\n      return;\n    }\n\n    setStateArr(stateArr => [...stateArr, {\n      name: AddExerciseExercise,\n      sets: AddExerciseSets,\n      reps: AddExerciseReps,\n      weight: AddExerciseWeight\n    }]);\n  };\n\n  const HandleWorkoutPlanSave = function (e) {\n    e.preventDefault();\n\n    if (workoutPlanName == \"\" || workoutPlanName == undefined) {\n      alert(\"The workout plan must have a name.\");\n      return;\n    }\n\n    let plan = {\n      Monday: mondayWorkout,\n      Tuesday: tuesdayWorkout,\n      Wednesday: wednesdayWorkout,\n      Thursday: thursdayWorkout,\n      Friday: fridayWorkout,\n      Saturday: saturdayWorkout,\n      Sunday: sundayWorkout\n    };\n    let daysOfTheWeek = \"\";\n    let allEmptyFlag = true;\n    Object.keys(plan).map(key => {\n      if (plan[key].length == 0) daysOfTheWeek += \"0\";else {\n        daysOfTheWeek += \"1\";\n        allEmptyFlag = false;\n      }\n    });\n\n    if (allEmptyFlag) {\n      alert(\"Some workout must be entered.\");\n      return;\n    }\n\n    let workout_plan = {\n      name: workoutPlanName,\n      daysOfTheWeek: daysOfTheWeek,\n      plan: plan\n    };\n    APIPost(\"http://localhost:8000/api/v1/\", \"workout_plan\", workout_plan, true).then(res => {\n      //Change active workout to the one just created and navigate to /workout_planner.abs\n      navigate();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [togglePopUp && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"AddExercisePopUp\",\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"Add Exercise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          HandleAddExerciseSubmit(e, eval(`set${whichAddButton}Workout`));\n        },\n        id: \"AddExerciseForm\",\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Exercise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: AddExerciseExercise,\n          onChange: e => setAddExerciseExercise(e.target.value),\n          children: Object.keys(PossibleExercises.current).map(exercise => {\n            //Returns array of keys\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: exercise,\n              children: exercise\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Sets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          onChange: e => setAddExerciseSets(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Reps\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          onChange: e => setAddExerciseReps(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Weight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          onChange: e => setAddExerciseWeight(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\",\n          className: \"btn btn-success col-sm-6 center\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTogglePopUp(!togglePopUp),\n        className: \"btn btn-primary\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Monday\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group\",\n            children: mondayWorkout.map(element => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: `${element.name}-${element.sets}x${element.reps}-${element.weight}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: () => HandleAddExercise(\"Monday\"),\n            children: \"Add exercise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Tuesday\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: tuesdayWorkout.map(element => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: `${element.name}-${element.sets}x${element.reps}-${element.weight}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: () => HandleAddExercise(\"Tuesday\"),\n            children: \"Add exercise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Wednesday\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: wednesdayWorkout.map(element => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: `${element.name}-${element.sets}x${element.reps}-${element.weight}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: () => HandleAddExercise(\"Wednesday\"),\n            children: \"Add exercise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Thurday\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: thursdayWorkout.map(element => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: `${element.name}-${element.sets}x${element.reps}-${element.weight}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: () => HandleAddExercise(\"Thursday\"),\n            children: \"Add exercise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Friday\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: fridayWorkout.map(element => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: `${element.name}-${element.sets}x${element.reps}-${element.weight}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: () => HandleAddExercise(\"Friday\"),\n            children: \"Add exercise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Saturday\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: saturdayWorkout.map(element => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: `${element.name}-${element.sets}x${element.reps}-${element.weight}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: () => HandleAddExercise(\"Saturday\"),\n            children: \"Add exercise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Sunday\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: sundayWorkout.map(element => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: `${element.name}-${element.sets}x${element.reps}-${element.weight}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: () => HandleAddExercise(\"Sunday\"),\n            children: \"Add exercise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => HandleWorkoutPlanSave(e),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setWorkoutPlanName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CreateWorkout, \"lBMmse+UyR2GDFd69qVys/AhmOk=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CreateWorkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateWorkout\");","map":{"version":3,"sources":["D:/SchoolWork/Computer Science/Year 2/NEA/NEA/frontend/src/Pages/CreateWorkout.js"],"names":["useEffect","useRef","useState","APIGet","APIPost","useNavigate","CreateWorkout","PossibleExercises","togglePopUp","setTogglePopUp","AddExerciseExercise","setAddExerciseExercise","AddExerciseSets","setAddExerciseSets","AddExerciseReps","setAddExerciseReps","AddExerciseWeight","setAddExerciseWeight","mondayWorkout","setMondayWorkout","tuesdayWorkout","setTuesdayWorkout","wednesdayWorkout","setWednesdayWorkout","thursdayWorkout","setThursdayWorkout","fridayWorkout","setFridayWorkout","saturdayWorkout","setSaturdayWorkout","sundayWorkout","setSundayWorkout","whichAddButton","setWhichAddButton","workoutPlanName","setWorkoutPlanName","navigate","console","log","then","res","current","HandleAddExercise","day","HandleAddExerciseSubmit","e","setStateArr","preventDefault","dir","name","sets","reps","weight","undefined","stateArr","HandleWorkoutPlanSave","alert","plan","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","daysOfTheWeek","allEmptyFlag","Object","keys","map","key","length","workout_plan","eval","target","value","exercise","element"],"mappings":"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","sourcesContent":["import \"./CreateWorkout.css\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { APIGet, APIPost } from \"../External/ApiHelper\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nexport default function CreateWorkout() {\r\n  const PossibleExercises = useRef();\r\n\r\n  const [togglePopUp, setTogglePopUp] = useState(false);\r\n  const [AddExerciseExercise, setAddExerciseExercise] = useState(\"Bench press\");\r\n  const [AddExerciseSets, setAddExerciseSets] = useState();\r\n  const [AddExerciseReps, setAddExerciseReps] = useState();\r\n  const [AddExerciseWeight, setAddExerciseWeight] = useState();\r\n\r\n  const [mondayWorkout, setMondayWorkout] = useState([]);\r\n  const [tuesdayWorkout, setTuesdayWorkout] = useState([]);\r\n  const [wednesdayWorkout, setWednesdayWorkout] = useState([]);\r\n  const [thursdayWorkout, setThursdayWorkout] = useState([]);\r\n  const [fridayWorkout, setFridayWorkout] = useState([]);\r\n  const [saturdayWorkout, setSaturdayWorkout] = useState([]);\r\n  const [sundayWorkout, setSundayWorkout] = useState([]);\r\n\r\n  const [whichAddButton, setWhichAddButton] = useState();\r\n  const [workoutPlanName, setWorkoutPlanName] = useState();\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    console.log(mondayWorkout);\r\n    //on page load\r\n    APIGet(\"http://localhost:8000/api/v1/\", \"exercises\", true).then((res) => {\r\n      PossibleExercises.current = res;\r\n      console.log(PossibleExercises.current);\r\n    });\r\n  }, []);\r\n  const HandleAddExercise = function (day) {\r\n    setWhichAddButton(day);\r\n    if (!togglePopUp) {\r\n      setTogglePopUp(true);\r\n    }\r\n  };\r\n  const HandleAddExerciseSubmit = function (e, setStateArr) {\r\n    e.preventDefault();\r\n    setTogglePopUp(false);\r\n    console.dir({\r\n      name: AddExerciseExercise,\r\n      sets: AddExerciseSets,\r\n      reps: AddExerciseReps,\r\n      weight: AddExerciseWeight,\r\n    });\r\n    //Check all fields are filled in\r\n    if (\r\n      AddExerciseExercise == undefined ||\r\n      AddExerciseSets == undefined ||\r\n      AddExerciseReps == undefined ||\r\n      AddExerciseWeight == undefined\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setStateArr((stateArr) => [\r\n      ...stateArr,\r\n      {\r\n        name: AddExerciseExercise,\r\n        sets: AddExerciseSets,\r\n        reps: AddExerciseReps,\r\n        weight: AddExerciseWeight,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const HandleWorkoutPlanSave = function (e) {\r\n    e.preventDefault();\r\n    if (workoutPlanName == \"\" || workoutPlanName == undefined) {\r\n      alert(\"The workout plan must have a name.\");\r\n      return;\r\n    }\r\n    let plan = {\r\n      Monday: mondayWorkout,\r\n      Tuesday: tuesdayWorkout,\r\n      Wednesday: wednesdayWorkout,\r\n      Thursday: thursdayWorkout,\r\n      Friday: fridayWorkout,\r\n      Saturday: saturdayWorkout,\r\n      Sunday: sundayWorkout,\r\n    };\r\n\r\n    let daysOfTheWeek = \"\";\r\n    let allEmptyFlag = true;\r\n    Object.keys(plan).map((key) => {\r\n      if (plan[key].length == 0) daysOfTheWeek += \"0\";\r\n      else {\r\n        daysOfTheWeek += \"1\";\r\n        allEmptyFlag = false;\r\n      }\r\n    });\r\n    if (allEmptyFlag) {\r\n      alert(\"Some workout must be entered.\");\r\n      return;\r\n    }\r\n    let workout_plan = {\r\n      name: workoutPlanName,\r\n      daysOfTheWeek: daysOfTheWeek,\r\n      plan: plan,\r\n    };\r\n\r\n    APIPost(\r\n      \"http://localhost:8000/api/v1/\",\r\n      \"workout_plan\",\r\n      workout_plan,\r\n      true\r\n    ).then((res) => {\r\n      //Change active workout to the one just created and navigate to /workout_planner.abs\r\n      navigate();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {togglePopUp && (\r\n        <div id=\"AddExercisePopUp\" className=\"text-center\">\r\n          <h1 className=\"text-center\">Add Exercise</h1>\r\n          <form\r\n            onSubmit={(e) => {\r\n              HandleAddExerciseSubmit(e, eval(`set${whichAddButton}Workout`));\r\n            }}\r\n            id=\"AddExerciseForm\"\r\n            className=\"text-center\"\r\n          >\r\n            <label>Exercise</label>\r\n            <select\r\n              value={AddExerciseExercise}\r\n              onChange={(e) => setAddExerciseExercise(e.target.value)}\r\n            >\r\n              {Object.keys(PossibleExercises.current).map((exercise) => {\r\n                //Returns array of keys\r\n                return <option value={exercise}>{exercise}</option>;\r\n              })}\r\n            </select>\r\n            <label>Sets</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              onChange={(e) => setAddExerciseSets(e.target.value)}\r\n            />\r\n            <label>Reps</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              onChange={(e) => setAddExerciseReps(e.target.value)}\r\n            />\r\n            <label>Weight</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              onChange={(e) => setAddExerciseWeight(e.target.value)}\r\n            />\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Submit\"\r\n              className=\"btn btn-success col-sm-6 center\"\r\n            />\r\n          </form>\r\n          <button\r\n            onClick={() => setTogglePopUp(!togglePopUp)}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md text-center\">\r\n            <h1>Monday</h1>\r\n            <ul className=\"list-group\">\r\n              {mondayWorkout.map((element) => (\r\n                <li className=\"list-group-item\">{`${element.name}-${element.sets}x${element.reps}-${element.weight}`}</li>\r\n              ))}\r\n            </ul>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => HandleAddExercise(\"Monday\")}\r\n            >\r\n              Add exercise\r\n            </button>\r\n          </div>\r\n          <div className=\"col-md text-center\">\r\n            <h1>Tuesday</h1>\r\n            <ul>\r\n              {tuesdayWorkout.map((element) => (\r\n                <li className=\"list-group-item\">{`${element.name}-${element.sets}x${element.reps}-${element.weight}`}</li>\r\n              ))}\r\n            </ul>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => HandleAddExercise(\"Tuesday\")}\r\n            >\r\n              Add exercise\r\n            </button>\r\n          </div>\r\n          <div className=\"col-md text-center\">\r\n            <h1>Wednesday</h1>\r\n            <ul>\r\n              {wednesdayWorkout.map((element) => (\r\n                <li className=\"list-group-item\">{`${element.name}-${element.sets}x${element.reps}-${element.weight}`}</li>\r\n              ))}\r\n            </ul>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => HandleAddExercise(\"Wednesday\")}\r\n            >\r\n              Add exercise\r\n            </button>\r\n          </div>\r\n          <div className=\"col-md text-center\">\r\n            <h1>Thurday</h1>\r\n            <ul>\r\n              {thursdayWorkout.map((element) => (\r\n                <li className=\"list-group-item\">{`${element.name}-${element.sets}x${element.reps}-${element.weight}`}</li>\r\n              ))}\r\n            </ul>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => HandleAddExercise(\"Thursday\")}\r\n            >\r\n              Add exercise\r\n            </button>\r\n          </div>\r\n          <div className=\"col-md text-center\">\r\n            <h1>Friday</h1>\r\n            <ul>\r\n              {fridayWorkout.map((element) => (\r\n                <li className=\"list-group-item\">{`${element.name}-${element.sets}x${element.reps}-${element.weight}`}</li>\r\n              ))}\r\n            </ul>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => HandleAddExercise(\"Friday\")}\r\n            >\r\n              Add exercise\r\n            </button>\r\n          </div>\r\n          <div className=\"col-md text-center\">\r\n            <h1>Saturday</h1>\r\n            <ul>\r\n              {saturdayWorkout.map((element) => (\r\n                <li className=\"list-group-item\">{`${element.name}-${element.sets}x${element.reps}-${element.weight}`}</li>\r\n              ))}\r\n            </ul>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => HandleAddExercise(\"Saturday\")}\r\n            >\r\n              Add exercise\r\n            </button>\r\n          </div>\r\n          <div className=\"col-md text-center\">\r\n            <h1>Sunday</h1>\r\n            <ul>\r\n              {sundayWorkout.map((element) => (\r\n                <li className=\"list-group-item\">{`${element.name}-${element.sets}x${element.reps}-${element.weight}`}</li>\r\n              ))}\r\n            </ul>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => HandleAddExercise(\"Sunday\")}\r\n            >\r\n              Add exercise\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <form onSubmit={(e) => HandleWorkoutPlanSave(e)}>\r\n        <label>Name</label>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => setWorkoutPlanName(e.target.value)}\r\n        />\r\n        <input type=\"submit\" className=\"btn btn-success\" />\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}