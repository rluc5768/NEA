{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rober\\\\Documents\\\\Schoolwork\\\\Computer Science\\\\NEA\\\\FinalNEA\\\\frontend\\\\src\\\\Pages\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport { useRef } from \"react\";\nimport { useLocation, useNavigate, useSearchParams } from \"react-router-dom\";\nimport { Map, ActivityList, LoadAndSort } from \"../Components/ComponentImports\";\nimport \"./Home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getToken() {\n  //gets the value of token from session storage.\n  try {\n    return JSON.parse(sessionStorage.getItem(\"token\"));\n  } catch (e) {\n    sessionStorage.removeItem(\"token\");\n  }\n}\n\nfunction Home() {\n  _s();\n\n  //if there is a validation_error then log the user out.\n  const search = useLocation().search;\n  const redirect = useRef(false);\n  console.log(search);\n  console.log(new URLSearchParams(search).get(\"code\"));\n  console.log(\"REFERRER: \" + document.referrer);\n  let scope = new URLSearchParams(search).get(\"scope\");\n\n  if (scope == \"read,activity:read_all\") {\n    //Will check the previous url to stop 'bad requests' or clear search params.\n    let code = new URLSearchParams(search).get(\"code\");\n    console.log(code);\n    fetch(\"https://www.strava.com/oauth/token\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        client_id: 53221,\n        client_secret: \"1a3a01f913e69e0868315901ebb13c27aae61dd4\",\n        //would be hidden.\n        code: code,\n        grant_type: \"authorization_code\"\n      })\n    }).then(data => data.json()).then(res => {\n      try {\n        if (\"token_type\" in res) {}\n      } catch (e) {}\n    }); //given token\n    //Save tokens in database and set stravaAuthorised to true. THen can make requests.\n    //PUT request to \"/user\" to update user profile.\n\n    /*fetch(\"http://localhost:8000/api/v1/user/\", {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\":getToken(),\r\n      },\r\n      body: JSON.stringify({\r\n        stravaAuthorised:true,\r\n        stravaAccessToken:res[\"access_token\"],\r\n        stravaRefreshToken:res[\"refresh_token\"],\r\n        stravaAccessTokenExpiresAt:res[\"expires_at\"]\r\n      }),\r\n    })\r\n    }\r\n    else{//handle errors\r\n      console.log(res)\r\n    }\r\n    }\r\n    catch(e){\r\n    }\r\n      });*/\n  }\n\n  const HandleClick = function () {\n    //First check if the user is strava_authorised. by calling get on \"/user\"\n    //IF NOT strava authorised, redirected to strava login, url checked and user details modified.\n    fetch(\"http://localhost:8000/api/v1/user\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: getToken()\n      }\n    }).then(data => data.json()).then(res => {\n      if (res[\"type\"] == \"user_details\") {\n        //successful\n        let userDetails = res[\"details\"];\n\n        if (!userDetails[\"stravaAuthorised\"]) {\n          //redirect to strava oauth page.\n          window.location = \"https://www.strava.com/oauth/authorize?client_id=53221&redirect_uri=http://localhost:3000/home&response_type=code&scope=activity:read_all\";\n        }\n\n        console.log(userDetails);\n      } else {\n        //unsuccessful - handle errors\n        console.log(res);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    id: \"grid-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row show-grid h-75\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col col-md-7\",\n        children: /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col col-md-5\",\n        children: /*#__PURE__*/_jsxDEV(ActivityList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col col-md-5\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: HandleClick,\n          children: \"Load\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"sv9EMFfmgBYFNnXb9C5CYqrliIA=\", false, function () {\n  return [useLocation];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/rober/Documents/Schoolwork/Computer Science/NEA/FinalNEA/frontend/src/Pages/Home.js"],"names":["useRef","useLocation","useNavigate","useSearchParams","Map","ActivityList","LoadAndSort","getToken","JSON","parse","sessionStorage","getItem","e","removeItem","Home","search","redirect","console","log","URLSearchParams","get","document","referrer","scope","code","fetch","method","headers","body","stringify","client_id","client_secret","grant_type","then","data","json","res","HandleClick","Authorization","userDetails","window","location"],"mappings":"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","sourcesContent":["import { useRef } from \"react\";\r\nimport { useLocation, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport { Map, ActivityList, LoadAndSort } from \"../Components/ComponentImports\";\r\nimport \"./Home.css\";\r\nfunction getToken() {\r\n  //gets the value of token from session storage.\r\n  try {\r\n    return JSON.parse(sessionStorage.getItem(\"token\"));\r\n  } catch (e) {\r\n    sessionStorage.removeItem(\"token\");\r\n  }\r\n}\r\n\r\nfunction Home() {//if there is a validation_error then log the user out.\r\n  \r\n  const search = useLocation().search;\r\n  const redirect = useRef(false);\r\n  console.log(search);\r\n  console.log(new URLSearchParams(search).get(\"code\"));\r\n  console.log(\"REFERRER: \"+document.referrer)\r\n  let scope = new URLSearchParams(search).get(\"scope\");\r\n  if (scope == \"read,activity:read_all\") {//Will check the previous url to stop 'bad requests' or clear search params.\r\n    let code = new URLSearchParams(search).get(\"code\");\r\n    console.log(code);\r\n    fetch(\"https://www.strava.com/oauth/token\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        client_id: 53221,\r\n        client_secret: \"1a3a01f913e69e0868315901ebb13c27aae61dd4\", //would be hidden.\r\n        code: code,\r\n        grant_type: \"authorization_code\",\r\n      }),\r\n    })\r\n      .then((data) => data.json())\r\n      .then((res) => {\r\n        try {\r\n          \r\n          if (\"token_type\" in res){\r\n          }\r\n        }\r\n        catch(e){\r\n\r\n        }\r\n      });//given token\r\n          //Save tokens in database and set stravaAuthorised to true. THen can make requests.\r\n          //PUT request to \"/user\" to update user profile.\r\n          /*fetch(\"http://localhost:8000/api/v1/user/\", {\r\n            method: \"PUT\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              \"Authorization\":getToken(),\r\n            },\r\n            body: JSON.stringify({\r\n              stravaAuthorised:true,\r\n              stravaAccessToken:res[\"access_token\"],\r\n              stravaRefreshToken:res[\"refresh_token\"],\r\n              stravaAccessTokenExpiresAt:res[\"expires_at\"]\r\n            }),\r\n          })\r\n          }\r\n          else{//handle errors\r\n            console.log(res)\r\n          }\r\n        }\r\n        catch(e){\r\n\r\n        }\r\n      \r\n    });*/\r\n  }\r\n  const HandleClick = function () {\r\n    //First check if the user is strava_authorised. by calling get on \"/user\"\r\n    //IF NOT strava authorised, redirected to strava login, url checked and user details modified.\r\n    fetch(\"http://localhost:8000/api/v1/user\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: getToken(),\r\n      },\r\n    })\r\n      .then((data) => data.json())\r\n      .then((res) => {\r\n        if (res[\"type\"] == \"user_details\") {\r\n          //successful\r\n          let userDetails = res[\"details\"];\r\n          if (!userDetails[\"stravaAuthorised\"]) {\r\n            //redirect to strava oauth page.\r\n            window.location =\r\n              \"https://www.strava.com/oauth/authorize?client_id=53221&redirect_uri=http://localhost:3000/home&response_type=code&scope=activity:read_all\";\r\n          }\r\n          console.log(userDetails);\r\n        } else {\r\n          //unsuccessful - handle errors\r\n          console.log(res);\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"container-fluid\" id=\"grid-container\">\r\n      <div className=\"row show-grid h-75\">\r\n        <div className=\"col col-md-7\">\r\n          <Map />\r\n        </div>\r\n        <div className=\"col col-md-5\">\r\n          <ActivityList />\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-7\"></div>\r\n        <div className=\"col col-md-5\">\r\n          <button className=\"btn btn-primary\" onClick={HandleClick}>\r\n            Load\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}