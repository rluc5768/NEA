{"ast":null,"code":"import { useState } from \"react\";\nconst Authentication = {\n  User: function () {\n    //This is where the token will be validated\n    //const [token, setToken] = useToken();\n    //=============== Initial Validation ===================\n    //=============== End of intial validation =============\n    const checkJWT = async () => {\n      return await validateJWT(token);\n    };\n\n    if (!checkJWT(token)) {\n      return false;\n    }\n\n    return true; //true if valid, false if invalid.\n  }\n};\nexport default Authentication;\n\nasync function validateJWT(token) {\n  return fetch(\"http://localhost:8000/api/v1/authorise_user/\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(token)\n  }).then(data => data.json());\n}","map":{"version":3,"sources":["C:/Users/rober/Documents/Schoolwork/Computer Science/NEA/FinalNEA/frontend/src/Services/Authentication.js"],"names":["useState","Authentication","User","checkJWT","validateJWT","token","fetch","method","headers","body","JSON","stringify","then","data","json"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,IAAI,EAAG,YAAW;AAAC;AACf;AACA;AAEA;AACA,UAAMC,QAAQ,GAAG,YAAY;AACzB,aAAO,MAAMC,WAAW,CAACC,KAAD,CAAxB;AACH,KAFD;;AAGA,QAAG,CAACF,QAAQ,CAACE,KAAD,CAAZ,EAAoB;AAChB,aAAO,KAAP;AACH;;AACD,WAAO,IAAP,CAXc,CAWD;AAChB;AAbkB,CAAvB;AAeA,eAAeJ,cAAf;;AAEA,eAAeG,WAAf,CAA2BC,KAA3B,EAAiC;AAC7B,SAAOC,KAAK,CAAC,8CAAD,EAAiD;AAC7DC,IAAAA,MAAM,EAAE,MADqD;AAE7DC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFoD;AAK7DC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,KAAf;AALuD,GAAjD,CAAL,CAMNO,IANM,CAMAC,IAAD,IAAUA,IAAI,CAACC,IAAL,EANT,CAAP;AAOH","sourcesContent":["import {useState} from \"react\";\r\nconst Authentication = {\r\n    User : function (){//This is where the token will be validated\r\n        //const [token, setToken] = useToken();\r\n        //=============== Initial Validation ===================\r\n\r\n        //=============== End of intial validation =============\r\n        const checkJWT = async () => {\r\n            return await validateJWT(token);\r\n        }\r\n        if(!checkJWT(token)){\r\n            return false;\r\n        }\r\n        return true; //true if valid, false if invalid.\r\n    }\r\n}\r\nexport default Authentication;\r\n\r\nasync function validateJWT(token){\r\n    return fetch(\"http://localhost:8000/api/v1/authorise_user/\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(token),\r\n  }).then((data) => data.json());\r\n}"]},"metadata":{},"sourceType":"module"}